import discord
from discord import Option
from discord.ext import commands
from discord.commands import slash_command
import random
from config import *

server_ids = [SERVER_ID]


class FunCommands(commands.Cog):

  def __init__(self, bot):
    self.bot = bot


  @slash_command(name='ping', description='Sends bot\'s latency', server_ids=server_ids)
  async def ping(self, ctx):
    embed = discord.Embed(colour=discord.Color.blue())
    embed.title = f'üì∂ –ó–∞–¥–µ—Ä–∂–∫–∞: {round(self.bot.latency * 1000)} –ª–µ—Ç'
    await ctx.respond(embed=embed)


  @slash_command(name='ball', description='–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä', server_ids=server_ids)
  async def ball(self, ctx,
    –≤–æ–ø—Ä–æ—Å: Option(str, '–í–æ–ø—Ä–æ—Å', required=False)
  ):
    embed = discord.Embed(colour=discord.Color.purple())
    embed.title = 'üîÆ ' + random.choice(ANSWER_BALL)
    if –≤–æ–ø—Ä–æ—Å != None:
      embed.description = f'–í–æ–ø—Ä–æ—Å: {–≤–æ–ø—Ä–æ—Å}'
    await ctx.respond(embed=embed)


  @slash_command(name='ben', description='–ì–æ–≤–æ—Ä—è—â–∏–π –ë—ç–Ω', server_ids=server_ids)
  async def ben(self, ctx,
    –≤–æ–ø—Ä–æ—Å: Option(str, '–í–æ–ø—Ä–æ—Å', required=False)
  ):
    embed = discord.Embed(colour=discord.Color.dark_orange())
    embed.title = 'üê∂ ' + random.choice(ANSWER_BEN)
    if –≤–æ–ø—Ä–æ—Å != None:
      embed.description = f'–í–æ–ø—Ä–æ—Å: {–≤–æ–ø—Ä–æ—Å}'
    await ctx.respond(embed=embed)


  @slash_command(name='roll', description='–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ', server_ids=server_ids)
  async def roll(self, ctx,
    —á–∏—Å–ª–æ: Option(int, '–ù–∞–∏–±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ', required=False)
  ):
    if —á–∏—Å–ª–æ == None:
      —á–∏—Å–ª–æ = 10
    embed = discord.Embed(colour=discord.Color.dark_blue())
    embed.title = 'üîò –†–µ–∑—É–ª—å—Ç–∞—Ç: ' + str(random.randint(1, —á–∏—Å–ª–æ))
    embed.description = f'–°—Ä–µ–¥–∏ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ {str(—á–∏—Å–ª–æ)}'
    await ctx.respond(embed=embed)


  @slash_command(name='pick', description='–í—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤', server_ids=server_ids)
  async def pick(self, ctx,
    –≤–∞—Ä–∏–∞–Ω—Ç—ã: Option(str, name='–≤–∞—Ä–∏–∞–Ω—Ç—ã', description='–ß–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é', required=True)
  ):
    embed = discord.Embed(colour=discord.Color.dark_teal())
    embed.title = 'üí† –†–µ–∑—É–ª—å—Ç–∞—Ç: ' + str(random.choice(–≤–∞—Ä–∏–∞–Ω—Ç—ã.split(',')))
    embed.description = f'–í–∞—Ä–∏–∞–Ω—Ç—ã: {–≤–∞—Ä–∏–∞–Ω—Ç—ã}'
    await ctx.respond(embed=embed)


  @slash_command(name='coin', description='–û—Ä—ë–ª –∏–ª–∏ —Ä–µ—à–∫–∞', server_ids=server_ids)
  async def fun_money(self, ctx):
    embed = discord.Embed(colour=discord.Color.gold())
    embed.title = random.choice(ANSWER_MONEY)
    await ctx.respond(embed=embed)


  '''@bot.slash_command(name='rock', description='–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞', server_ids=server_ids)
  async def rock(self, ctx):
    while True:
      buttons = [
        Components.create_button(label='üóø–ö–∞–º–µ–Ω—å', style=ButtonStyle.blurple, custom_id='0'),
        Components.create_button(label='‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã', style=ButtonStyle.blurple, custom_id='1'),
        Components.create_button(label='üßª–ë—É–º–∞–≥–∞', style=ButtonStyle.blurple, custom_id='2')
      ]
      embed = discord.Embed(colour=discord.Colour.blurple())
      embed.title = 'üëä –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞'
      embed.description = '–ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤'
      actionrow = Components.create_actionrow(*buttons)
      await ctx.send(embed=embed, components=[actionrow])

      first = await Components.wait_for_component(self.bot, components=actionrow)
      await first.edit_origin()
      second = await Components.wait_for_component(self.bot, components=actionrow)
      if first.custom_id == second.custom_id:
        embed.title = 'üëä __–ù–∏—á—å—è__'
      elif (first.custom_id=='0' and second.custom_id=='1') or (first.custom_id=='1' and second.custom_id=='2') or (first.custom_id=='2' and second.custom_id=='0'):
        embed.title = f'üëä __{first.author.name}__ –ø–æ–±–µ–¥–∏–ª!'
      else:
        embed.title = f'üëä __{second.author.name}__ –ø–æ–±–µ–¥–∏–ª!'

      embed.description = ''
      buttons = [Components.create_button(label='üîÅ–ó–∞–Ω–æ–≤–æ', style=ButtonStyle.blurple, custom_id='replay')]
      actionrow = Components.create_actionrow(*buttons)
      chooser = {'0': 'üóø–ö–∞–º–µ–Ω—å', '1': '‚úÇÔ∏è–ù–æ–∂–Ω–∏—Ü—ã', '2': 'üßª–ë—É–º–∞–≥–∞'}
      embed.add_field(name=first.author.name+':', value=chooser[first.custom_id], inline=False)
      embed.add_field(name=second.author.name+':', value=chooser[second.custom_id], inline=False)
      await second.edit_origin(embed=embed, components=[actionrow])

      replay = await Components.wait_for_component(self.bot, components=actionrow)
      await replay.edit_origin()'''


def setup(bot):
  bot.add_cog(FunCommands(bot))